import flixel.FlxG;
import flixel.util.FlxTimer;
import flixel.FlxSprite;
import funkin.Paths;
import funkin.play.PlayState;
import funkin.audio.FunkinSound;
import funkin.graphics.FunkinSprite;
import funkin.play.notes.notekind.NoteKind;
import funkin.Highscore;

class PhantomNote extends NoteKind
{
    var draining:Bool = false;
    var rate:Float = 0.01;
    var tick:FlxTimer = null;
    var stop:FlxTimer = null;

    public function new(noteKind:String, description:String = "", ?noteStyleId:String, ?params:Array<NoteKindParam>)
	{
		super("phantomnote", "Phantom Note (EXE)", "phantomnote", []);
	}

	function onNoteIncoming(event)
	{
		super.onNoteIncoming(event);

		event.note.lowPriority = true;
	}

	function onNoteHit(event:HitNoteScriptEvent)
	{
    	if (event.judgement == "perfect" || "good") {
    		super.onNoteHit(event);
			return;
		}

        rate += 0.06;

        if (!draining)
        {
            draining = true;

            tick = new FlxTimer().start(0.05, function(t:FlxTimer)
            {
                if (PlayState.instance == null || PlayState.instance.isGamePaused) return;
                PlayState.instance.health -= rate * 0.05;
            }, 0);

            stop = new FlxTimer().start(7, function(_)
            {
                if (tick != null) { tick.cancel(); tick = null; }
                draining = false;
                rate = 0.01;
                stop = null;
            });
        }
	}
	function onNoteMiss(event:NoteScriptEvent)
	{
		if (event.note.noteKind == "phantomnote")
		{
			event.cancelEvent();
		}
	}
}